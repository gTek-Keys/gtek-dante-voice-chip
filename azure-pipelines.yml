trigger:
  - main

resources:
  - repo: self

variables:
  tag: "$(Build.BuildId)"
  image: "ceptokrem/gtek-dante-voice-chip"

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Build an image
            inputs:
              command: build
              dockerfile: "$(Build.SourcesDirectory)/Dockerfile"
              repository: $(image)
              tags: |
                $(tag)
                latest
          - task: CmdLine@2
            displayName: Find CVEs on image
            inputs:
              script: |
                # Install the Docker Scout CLI
                curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh -s --
                # Login to Docker Hub required for Docker Scout CLI
                echo $(DOCKER_HUB_PAT) | docker login -u $(DOCKER_HUB_USER) --password-stdin
                # Get a CVE report for the built image and fail the pipeline when critical or high CVEs are detected
                docker scout cves $(image):$(tag) --exit-code --only-severity critical,high
          - task: CmdLine@2
            displayName: Compare to production environment
            inputs:
              script: |
                # Compare current build against production environment
                docker scout compare --to-env production $(image):$(tag) --exit-code --only-severity critical,high
            condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
          - task: Docker@2
            displayName: Push image to registry
            inputs:
              command: push
              repository: $(image)
              tags: |
                $(tag)
                latest
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))