#!/bin/bash

# 📝 Configuration Generator - Dynamic configs for clean, drift-free builds

set -e

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$PROJECT_ROOT"

echo "📝 Generating dynamic configurations..."

# Generate Vercel configuration
echo "🌐 Generating vercel.json..."
cat > vercel.json << 'EOF'
{
  "version": 2,
  "name": "dante-voice-chip",
  "builds": [
    {
      "src": "frontend/package.json",
      "use": "@vercel/next",
      "config": {
        "distDir": ".next"
      }
    }
  ],
  "routes": [
    {
      "src": "/api/(.*)",
      "dest": "/api/$1"
    },
    {
      "src": "/(.*)",
      "dest": "/frontend/$1"
    }
  ],
  "functions": {
    "frontend/app/api/*/route.ts": {
      "runtime": "nodejs18.x"
    }
  },
  "env": {
    "NODE_ENV": "production"
  },
  "regions": ["iad1"],
  "framework": "nextjs"
}
EOF

# Generate root TypeScript config
echo "🔧 Generating root tsconfig.json..."
cat > tsconfig.json << 'EOF'
{
  "compilerOptions": {
    "target": "ES2020",
    "lib": ["dom", "dom.iterable", "ES6"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./frontend/app/*"],
      "@/components/*": ["./frontend/app/components/*"],
      "@/lib/*": ["./frontend/lib/*"],
      "@/types/*": ["./types/*"]
    }
  },
  "include": [
    "**/*.ts",
    "**/*.tsx",
    "frontend/**/*",
    "backend/**/*",
    "voice/**/*"
  ],
  "exclude": [
    "node_modules",
    ".next",
    "dist"
  ],
  "references": [
    { "path": "./frontend" },
    { "path": "./backend" },
    { "path": "./voice" }
  ]
}
EOF

# Generate root ESLint config
echo "🔍 Generating .eslintrc.json..."
cat > .eslintrc.json << 'EOF'
{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "next/core-web-vitals"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "rules": {
    "react/no-unescaped-entities": "off",
    "no-unused-vars": "warn",
    "no-console": "off",
    "prefer-const": "warn"
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json"
      }
    }
  ]
}
EOF

# Generate Prettier config
echo "💅 Generating .prettierrc..."
cat > .prettierrc << 'EOF'
{
  "semi": true,
  "trailingComma": "es5",
  "singleQuote": true,
  "printWidth": 80,
  "tabWidth": 2,
  "useTabs": false
}
EOF

# Generate environment template
echo "🔐 Generating .env.example..."
cat > .env.example << 'EOF'
# Dante Voice Chip Environment Variables

# OpenAI API for voice features
OPENAI_API_KEY=your-openai-api-key-here

# Encryption key for local data (auto-generated by agent)
ENCRYPTION_KEY=auto-generated-by-agent

# Vercel deployment settings
VERCEL_URL=auto-set-by-vercel
NEXT_PUBLIC_VERCEL_URL=auto-set-by-vercel

# Development settings
NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000
EOF

# Make scripts executable
echo "🔧 Making scripts executable..."
chmod +x scripts/*.sh

echo "✅ Configuration generation complete!"